{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3d119bda",
   "metadata": {
    "papermill": {
     "duration": 0.007626,
     "end_time": "2024-06-26T09:28:54.362345",
     "exception": false,
     "start_time": "2024-06-26T09:28:54.354719",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>HuggingFace</center>\n",
    "\n",
    "If you are interested in the field of NLP, chances are you've heard of HuggingFace Transformers. As their [GitHub page](https://github.com/huggingface/transformers) says, they provide **State-of-the-art Natural Language Processing for PyTorch and TensorFlow 2.0**\n",
    "\n",
    "[Recently](https://discuss.huggingface.co/t/new-pipeline-for-zero-shot-text-classification/681), they included support for zero-shot-classification. I am going to use this Zero-Shot Classification Pipeline for multi-class classification on the Arxiv Dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9590f7c",
   "metadata": {
    "papermill": {
     "duration": 0.006606,
     "end_time": "2024-06-26T09:28:54.375787",
     "exception": false,
     "start_time": "2024-06-26T09:28:54.369181",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center><b>Zero-Shot Classification</b></center>\n",
    "\n",
    "Quite simply put, zero-shot classification refers to the class of machine learning problems where we want our models to predict output for classes which it did not encounter during training time. \n",
    "\n",
    "![Zero Shot Learning](https://amitness.com/images/zero-shot-vs-transfer.png)\n",
    "\n",
    "Yup. In spite of no labelled training data, we can still get an output. How cool is that!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "314938ec",
   "metadata": {
    "papermill": {
     "duration": 0.006485,
     "end_time": "2024-06-26T09:28:54.389019",
     "exception": false,
     "start_time": "2024-06-26T09:28:54.382534",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>How does HuggingFace do Zero-Shot Classification?</center>\n",
    "\n",
    "Quoting from their [introductory colab notebook](https://colab.research.google.com/drive/1jocViLorbwWIkTXKwxCOV9HLTaDDgCaw?usp=sharing) : \n",
    "> The underlying model is trained on the task of Natural Language Inference (NLI), which takes in two sequences and determines whether they contradict each other, entail each other, or neither.\n",
    "> \n",
    "> This can be adapted to the task of zero-shot classification by treating the sequence which we want to classify as one NLI sequence (called the premise) and turning a candidate label into the other (the hypothesis). If the model predicts that the constructed premise _entails_ the hypothesis, then we can take that as a prediction that the label applies to the text."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "219ee1d5",
   "metadata": {
    "_kg_hide-input": true,
    "_kg_hide-output": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:28:54.404528Z",
     "iopub.status.busy": "2024-06-26T09:28:54.403789Z",
     "iopub.status.idle": "2024-06-26T09:29:44.782068Z",
     "shell.execute_reply": "2024-06-26T09:29:44.780838Z"
    },
    "papermill": {
     "duration": 50.388879,
     "end_time": "2024-06-26T09:29:44.784597",
     "exception": false,
     "start_time": "2024-06-26T09:28:54.395718",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "!pip install -q git+https://github.com/huggingface/transformers.git"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c05f949e",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_kg_hide-input": true,
    "_kg_hide-output": true,
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-26T09:29:44.800644Z",
     "iopub.status.busy": "2024-06-26T09:29:44.799806Z",
     "iopub.status.idle": "2024-06-26T09:30:03.926855Z",
     "shell.execute_reply": "2024-06-26T09:30:03.925846Z"
    },
    "papermill": {
     "duration": 19.137519,
     "end_time": "2024-06-26T09:30:03.929306",
     "exception": false,
     "start_time": "2024-06-26T09:29:44.791787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-26 09:29:51.756711: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-06-26 09:29:51.756827: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-06-26 09:29:51.889559: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "from transformers import pipeline\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import json\n",
    "from tqdm import tqdm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8410aa6",
   "metadata": {
    "papermill": {
     "duration": 0.006954,
     "end_time": "2024-06-26T09:30:03.943956",
     "exception": false,
     "start_time": "2024-06-26T09:30:03.937002",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Preparing the data</center>\n",
    "\n",
    "We are only using training samples of papers which were published in the year 2020 for the purpose of this notebook\n",
    "\n",
    "Source : [Notebook](https://www.kaggle.com/balraj98/arxiv-abstract-classification-using-roberta)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b95aad38",
   "metadata": {
    "_cell_guid": "79c7e3d0-c299-4dcb-8224-4455121ee9b0",
    "_uuid": "d629ff2d2480ee46fbb7e2d37f6b5fab8052498a",
    "execution": {
     "iopub.execute_input": "2024-06-26T09:30:03.959893Z",
     "iopub.status.busy": "2024-06-26T09:30:03.959004Z",
     "iopub.status.idle": "2024-06-26T09:30:03.965582Z",
     "shell.execute_reply": "2024-06-26T09:30:03.964527Z"
    },
    "papermill": {
     "duration": 0.016893,
     "end_time": "2024-06-26T09:30:03.967692",
     "exception": false,
     "start_time": "2024-06-26T09:30:03.950799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data_file = '../input/arxiv/arxiv-metadata-oai-snapshot.json'\n",
    "\n",
    "\"\"\" Using `yield` to load the JSON file in a loop to prevent Python memory issues if JSON is loaded directly\"\"\"\n",
    "\n",
    "def get_metadata():\n",
    "    with open(data_file, 'r') as f:\n",
    "        for line in f:\n",
    "            yield line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c57db8ab",
   "metadata": {
    "_kg_hide-input": true,
    "_kg_hide-output": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:30:03.983992Z",
     "iopub.status.busy": "2024-06-26T09:30:03.983683Z",
     "iopub.status.idle": "2024-06-26T09:30:04.003671Z",
     "shell.execute_reply": "2024-06-26T09:30:04.002694Z"
    },
    "papermill": {
     "duration": 0.030882,
     "end_time": "2024-06-26T09:30:04.005805",
     "exception": false,
     "start_time": "2024-06-26T09:30:03.974923",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "category_map = {'astro-ph': 'Astrophysics',\n",
    "                'astro-ph.CO': 'Cosmology and Nongalactic Astrophysics',\n",
    "                'astro-ph.EP': 'Earth and Planetary Astrophysics',\n",
    "                'astro-ph.GA': 'Astrophysics of Galaxies',\n",
    "                'astro-ph.HE': 'High Energy Astrophysical Phenomena',\n",
    "                'astro-ph.IM': 'Instrumentation and Methods for Astrophysics',\n",
    "                'astro-ph.SR': 'Solar and Stellar Astrophysics',\n",
    "                'cond-mat.dis-nn': 'Disordered Systems and Neural Networks',\n",
    "                'cond-mat.mes-hall': 'Mesoscale and Nanoscale Physics',\n",
    "                'cond-mat.mtrl-sci': 'Materials Science',\n",
    "                'cond-mat.other': 'Other Condensed Matter',\n",
    "                'cond-mat.quant-gas': 'Quantum Gases',\n",
    "                'cond-mat.soft': 'Soft Condensed Matter',\n",
    "                'cond-mat.stat-mech': 'Statistical Mechanics',\n",
    "                'cond-mat.str-el': 'Strongly Correlated Electrons',\n",
    "                'cond-mat.supr-con': 'Superconductivity',\n",
    "                'cs.AI': 'Artificial Intelligence',\n",
    "                'cs.AR': 'Hardware Architecture',\n",
    "                'cs.CC': 'Computational Complexity',\n",
    "                'cs.CE': 'Computational Engineering, Finance, and Science',\n",
    "                'cs.CG': 'Computational Geometry',\n",
    "                'cs.CL': 'Computation and Language',\n",
    "                'cs.CR': 'Cryptography and Security',\n",
    "                'cs.CV': 'Computer Vision and Pattern Recognition',\n",
    "                'cs.CY': 'Computers and Society',\n",
    "                'cs.DB': 'Databases',\n",
    "                'cs.DC': 'Distributed, Parallel, and Cluster Computing',\n",
    "                'cs.DL': 'Digital Libraries',\n",
    "                'cs.DM': 'Discrete Mathematics',\n",
    "                'cs.DS': 'Data Structures and Algorithms',\n",
    "                'cs.ET': 'Emerging Technologies',\n",
    "                'cs.FL': 'Formal Languages and Automata Theory',\n",
    "                'cs.GL': 'General Literature',\n",
    "                'cs.GR': 'Graphics',\n",
    "                'cs.GT': 'Computer Science and Game Theory',\n",
    "                'cs.HC': 'Human-Computer Interaction',\n",
    "                'cs.IR': 'Information Retrieval',\n",
    "                'cs.IT': 'Information Theory',\n",
    "                'cs.LG': 'Machine Learning',\n",
    "                'cs.LO': 'Logic in Computer Science',\n",
    "                'cs.MA': 'Multiagent Systems',\n",
    "                'cs.MM': 'Multimedia',\n",
    "                'cs.MS': 'Mathematical Software',\n",
    "                'cs.NA': 'Numerical Analysis',\n",
    "                'cs.NE': 'Neural and Evolutionary Computing',\n",
    "                'cs.NI': 'Networking and Internet Architecture',\n",
    "                'cs.OH': 'Other Computer Science',\n",
    "                'cs.OS': 'Operating Systems',\n",
    "                'cs.PF': 'Performance',\n",
    "                'cs.PL': 'Programming Languages',\n",
    "                'cs.RO': 'Robotics',\n",
    "                'cs.SC': 'Symbolic Computation',\n",
    "                'cs.SD': 'Sound',\n",
    "                'cs.SE': 'Software Engineering',\n",
    "                'cs.SI': 'Social and Information Networks',\n",
    "                'cs.SY': 'Systems and Control',\n",
    "                'econ.EM': 'Econometrics',\n",
    "                'eess.AS': 'Audio and Speech Processing',\n",
    "                'eess.IV': 'Image and Video Processing',\n",
    "                'eess.SP': 'Signal Processing',\n",
    "                'gr-qc': 'General Relativity and Quantum Cosmology',\n",
    "                'hep-ex': 'High Energy Physics - Experiment',\n",
    "                'hep-lat': 'High Energy Physics - Lattice',\n",
    "                'hep-ph': 'High Energy Physics - Phenomenology',\n",
    "                'hep-th': 'High Energy Physics - Theory',\n",
    "                'math.AC': 'Commutative Algebra',\n",
    "                'math.AG': 'Algebraic Geometry',\n",
    "                'math.AP': 'Analysis of PDEs',\n",
    "                'math.AT': 'Algebraic Topology',\n",
    "                'math.CA': 'Classical Analysis and ODEs',\n",
    "                'math.CO': 'Combinatorics',\n",
    "                'math.CT': 'Category Theory',\n",
    "                'math.CV': 'Complex Variables',\n",
    "                'math.DG': 'Differential Geometry',\n",
    "                'math.DS': 'Dynamical Systems',\n",
    "                'math.FA': 'Functional Analysis',\n",
    "                'math.GM': 'General Mathematics',\n",
    "                'math.GN': 'General Topology',\n",
    "                'math.GR': 'Group Theory',\n",
    "                'math.GT': 'Geometric Topology',\n",
    "                'math.HO': 'History and Overview',\n",
    "                'math.IT': 'Information Theory',\n",
    "                'math.KT': 'K-Theory and Homology',\n",
    "                'math.LO': 'Logic',\n",
    "                'math.MG': 'Metric Geometry',\n",
    "                'math.MP': 'Mathematical Physics',\n",
    "                'math.NA': 'Numerical Analysis',\n",
    "                'math.NT': 'Number Theory',\n",
    "                'math.OA': 'Operator Algebras',\n",
    "                'math.OC': 'Optimization and Control',\n",
    "                'math.PR': 'Probability',\n",
    "                'math.QA': 'Quantum Algebra',\n",
    "                'math.RA': 'Rings and Algebras',\n",
    "                'math.RT': 'Representation Theory',\n",
    "                'math.SG': 'Symplectic Geometry',\n",
    "                'math.SP': 'Spectral Theory',\n",
    "                'math.ST': 'Statistics Theory',\n",
    "                'math-ph': 'Mathematical Physics',\n",
    "                'nlin.AO': 'Adaptation and Self-Organizing Systems',\n",
    "                'nlin.CD': 'Chaotic Dynamics',\n",
    "                'nlin.CG': 'Cellular Automata and Lattice Gases',\n",
    "                'nlin.PS': 'Pattern Formation and Solitons',\n",
    "                'nlin.SI': 'Exactly Solvable and Integrable Systems',\n",
    "                'nucl-ex': 'Nuclear Experiment',\n",
    "                'nucl-th': 'Nuclear Theory',\n",
    "                'physics.acc-ph': 'Accelerator Physics',\n",
    "                'physics.ao-ph': 'Atmospheric and Oceanic Physics',\n",
    "                'physics.app-ph': 'Applied Physics',\n",
    "                'physics.atm-clus': 'Atomic and Molecular Clusters',\n",
    "                'physics.atom-ph': 'Atomic Physics',\n",
    "                'physics.bio-ph': 'Biological Physics',\n",
    "                'physics.chem-ph': 'Chemical Physics',\n",
    "                'physics.class-ph': 'Classical Physics',\n",
    "                'physics.comp-ph': 'Computational Physics',\n",
    "                'physics.data-an': 'Data Analysis, Statistics and Probability',\n",
    "                'physics.ed-ph': 'Physics Education',\n",
    "                'physics.flu-dyn': 'Fluid Dynamics',\n",
    "                'physics.gen-ph': 'General Physics',\n",
    "                'physics.geo-ph': 'Geophysics',\n",
    "                'physics.hist-ph': 'History and Philosophy of Physics',\n",
    "                'physics.ins-det': 'Instrumentation and Detectors',\n",
    "                'physics.med-ph': 'Medical Physics',\n",
    "                'physics.optics': 'Optics',\n",
    "                'physics.plasm-ph': 'Plasma Physics',\n",
    "                'physics.pop-ph': 'Popular Physics',\n",
    "                'physics.soc-ph': 'Physics and Society',\n",
    "                'physics.space-ph': 'Space Physics',\n",
    "                'q-bio.BM': 'Biomolecules',\n",
    "                'q-bio.CB': 'Cell Behavior',\n",
    "                'q-bio.GN': 'Genomics',\n",
    "                'q-bio.MN': 'Molecular Networks',\n",
    "                'q-bio.NC': 'Neurons and Cognition',\n",
    "                'q-bio.OT': 'Other Quantitative Biology',\n",
    "                'q-bio.PE': 'Populations and Evolution',\n",
    "                'q-bio.QM': 'Quantitative Methods',\n",
    "                'q-bio.SC': 'Subcellular Processes',\n",
    "                'q-bio.TO': 'Tissues and Organs',\n",
    "                'q-fin.CP': 'Computational Finance',\n",
    "                'q-fin.EC': 'Economics',\n",
    "                'q-fin.GN': 'General Finance',\n",
    "                'q-fin.MF': 'Mathematical Finance',\n",
    "                'q-fin.PM': 'Portfolio Management',\n",
    "                'q-fin.PR': 'Pricing of Securities',\n",
    "                'q-fin.RM': 'Risk Management',\n",
    "                'q-fin.ST': 'Statistical Finance',\n",
    "                'q-fin.TR': 'Trading and Market Microstructure',\n",
    "                'quant-ph': 'Quantum Physics',\n",
    "                'stat.AP': 'Applications',\n",
    "                'stat.CO': 'Computation',\n",
    "                'stat.ME': 'Methodology',\n",
    "                'stat.ML': 'Machine Learning',\n",
    "                'stat.OT': 'Other Statistics',\n",
    "                'stat.TH': 'Statistics Theory'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "774a65f7",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:30:04.023542Z",
     "iopub.status.busy": "2024-06-26T09:30:04.023192Z",
     "iopub.status.idle": "2024-06-26T09:31:30.488629Z",
     "shell.execute_reply": "2024-06-26T09:31:30.487831Z"
    },
    "papermill": {
     "duration": 86.476095,
     "end_time": "2024-06-26T09:31:30.490883",
     "exception": false,
     "start_time": "2024-06-26T09:30:04.014788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "metadata = get_metadata()\n",
    "ids = []\n",
    "titles = []\n",
    "abstracts = []\n",
    "categories = []\n",
    "for paper in metadata:\n",
    "    metaDict = json.loads(paper)\n",
    "    try:\n",
    "        try:\n",
    "            year = int(metaDict['journal-ref'][-4:])    ### Example Format: \"Phys.Rev.D76:013009,2007\"\n",
    "        except:\n",
    "            year = int(metaDict['journal-ref'][-5:-1])    ### Example Format: \"Phys.Rev.D76:013009,(2007)\"\n",
    "        if(year == 2020):\n",
    "            ids.append(metaDict['id'])\n",
    "            titles.append(metaDict['title'])\n",
    "            abstracts.append(metaDict['abstract'])\n",
    "            categories.append(metaDict['categories'])\n",
    "    except:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2c266ba0",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:31:30.506809Z",
     "iopub.status.busy": "2024-06-26T09:31:30.506501Z",
     "iopub.status.idle": "2024-06-26T09:31:30.542593Z",
     "shell.execute_reply": "2024-06-26T09:31:30.541739Z"
    },
    "papermill": {
     "duration": 0.045979,
     "end_time": "2024-06-26T09:31:30.544632",
     "exception": false,
     "start_time": "2024-06-26T09:31:30.498653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>title</th>\n",
       "      <th>abstract</th>\n",
       "      <th>categories</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0712.1975</td>\n",
       "      <td>Reentrant spin glass transition in LuFe2O4</td>\n",
       "      <td>We have carried out a comprehensive investig...</td>\n",
       "      <td>cond-mat.str-el cond-mat.mtrl-sci</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0804.3104</td>\n",
       "      <td>Teichm\\\"uller Structures and Dual Geometric Gi...</td>\n",
       "      <td>The Gibbs measure theory for smooth potentia...</td>\n",
       "      <td>math.DS math.CV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0810.3615</td>\n",
       "      <td>Exact results for the Wigner transform phase s...</td>\n",
       "      <td>Closed form analytical expressions are obtai...</td>\n",
       "      <td>physics.atom-ph</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0810.5491</td>\n",
       "      <td>Nonequilibrium phase transition in a spreading...</td>\n",
       "      <td>We consider a nonequilibrium process on a ti...</td>\n",
       "      <td>cond-mat.stat-mech</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0902.3288</td>\n",
       "      <td>Origin and evolution of cosmic accelerators - ...</td>\n",
       "      <td>One of the most tantalizing questions in ast...</td>\n",
       "      <td>astro-ph.CO astro-ph.HE</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          id                                              title  \\\n",
       "0  0712.1975         Reentrant spin glass transition in LuFe2O4   \n",
       "1  0804.3104  Teichm\\\"uller Structures and Dual Geometric Gi...   \n",
       "2  0810.3615  Exact results for the Wigner transform phase s...   \n",
       "3  0810.5491  Nonequilibrium phase transition in a spreading...   \n",
       "4  0902.3288  Origin and evolution of cosmic accelerators - ...   \n",
       "\n",
       "                                            abstract  \\\n",
       "0    We have carried out a comprehensive investig...   \n",
       "1    The Gibbs measure theory for smooth potentia...   \n",
       "2    Closed form analytical expressions are obtai...   \n",
       "3    We consider a nonequilibrium process on a ti...   \n",
       "4    One of the most tantalizing questions in ast...   \n",
       "\n",
       "                          categories  \n",
       "0  cond-mat.str-el cond-mat.mtrl-sci  \n",
       "1                    math.DS math.CV  \n",
       "2                    physics.atom-ph  \n",
       "3                 cond-mat.stat-mech  \n",
       "4            astro-ph.CO astro-ph.HE  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame({'id' : ids,'title' : titles,'abstract' : abstracts, 'categories' : categories})\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5a3174e2",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:31:30.560649Z",
     "iopub.status.busy": "2024-06-26T09:31:30.560314Z",
     "iopub.status.idle": "2024-06-26T09:31:30.565081Z",
     "shell.execute_reply": "2024-06-26T09:31:30.564264Z"
    },
    "papermill": {
     "duration": 0.014709,
     "end_time": "2024-06-26T09:31:30.567109",
     "exception": false,
     "start_time": "2024-06-26T09:31:30.552400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 33388 rows in the dataset\n"
     ]
    }
   ],
   "source": [
    "print(f'There are {df.shape[0]} rows in the dataset')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ed43543",
   "metadata": {
    "papermill": {
     "duration": 0.006945,
     "end_time": "2024-06-26T09:31:30.581147",
     "exception": false,
     "start_time": "2024-06-26T09:31:30.574202",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Preparing the pipeline in one-line of code!</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5a57672f",
   "metadata": {
    "_kg_hide-output": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:31:30.596811Z",
     "iopub.status.busy": "2024-06-26T09:31:30.596513Z",
     "iopub.status.idle": "2024-06-26T09:31:40.956716Z",
     "shell.execute_reply": "2024-06-26T09:31:40.955611Z"
    },
    "papermill": {
     "duration": 10.370856,
     "end_time": "2024-06-26T09:31:40.959197",
     "exception": false,
     "start_time": "2024-06-26T09:31:30.588341",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No model was supplied, defaulted to facebook/bart-large-mnli and revision c626438 (https://huggingface.co/facebook/bart-large-mnli).\n",
      "Using a pipeline without specifying a model name and revision in production is not recommended.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fa98c83ee4ca474186cd6eefdf0b3753",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/1.15k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f50cfb6f8caa4f509450194e4f0be8f1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/1.63G [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9f0b95d961ea4c1e93ed3181fb0a9a61",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4548b6a8f1584434a5b5f1dec916300f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "905b4d451e214737b0cdf0645d979de4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "994be505e7e9407aa3a4f374df84a51b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "classifier = pipeline(\"zero-shot-classification\",device = 0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30f6d161",
   "metadata": {
    "papermill": {
     "duration": 0.009652,
     "end_time": "2024-06-26T09:31:40.978972",
     "exception": false,
     "start_time": "2024-06-26T09:31:40.969320",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Making Predictions</center>\n",
    "\n",
    "For the purpose of this notebook, I am only making predictions on the first 100 data samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f9044c98",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-26T09:31:41.000536Z",
     "iopub.status.busy": "2024-06-26T09:31:41.000154Z",
     "iopub.status.idle": "2024-06-26T09:42:15.705136Z",
     "shell.execute_reply": "2024-06-26T09:42:15.704200Z"
    },
    "papermill": {
     "duration": 634.7428,
     "end_time": "2024-06-26T09:42:15.731986",
     "exception": false,
     "start_time": "2024-06-26T09:31:40.989186",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|          | 0/100 [00:00<?, ?it/s]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  1%|          | 1/100 [00:06<10:57,  6.64s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  2%|▏         | 2/100 [00:12<09:59,  6.12s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  3%|▎         | 3/100 [00:17<08:49,  5.46s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  4%|▍         | 4/100 [00:22<09:00,  5.63s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  5%|▌         | 5/100 [00:31<10:38,  6.72s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  6%|▌         | 6/100 [00:37<10:10,  6.49s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  7%|▋         | 7/100 [00:42<09:06,  5.87s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  8%|▊         | 8/100 [00:46<08:22,  5.46s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "  9%|▉         | 9/100 [00:51<07:53,  5.21s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 10%|█         | 10/100 [00:56<07:47,  5.20s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "You seem to be using the pipelines sequentially on GPU. In order to maximize efficiency please use a dataset\n",
      " 11%|█         | 11/100 [01:04<08:45,  5.91s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 12%|█▏        | 12/100 [01:12<09:51,  6.72s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 13%|█▎        | 13/100 [01:17<08:48,  6.07s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 14%|█▍        | 14/100 [01:25<09:47,  6.83s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 15%|█▌        | 15/100 [01:31<09:13,  6.51s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 16%|█▌        | 16/100 [01:39<09:32,  6.82s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 17%|█▋        | 17/100 [01:43<08:30,  6.15s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 18%|█▊        | 18/100 [01:53<09:51,  7.21s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 19%|█▉        | 19/100 [01:58<08:57,  6.63s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 20%|██        | 20/100 [02:04<08:26,  6.34s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 21%|██        | 21/100 [02:10<08:03,  6.12s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 22%|██▏       | 22/100 [02:15<07:52,  6.06s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 23%|██▎       | 23/100 [02:21<07:38,  5.96s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 24%|██▍       | 24/100 [02:28<07:59,  6.31s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 25%|██▌       | 25/100 [02:35<08:05,  6.48s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 26%|██▌       | 26/100 [02:42<08:10,  6.63s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 27%|██▋       | 27/100 [02:45<06:41,  5.49s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 28%|██▊       | 28/100 [02:53<07:26,  6.21s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 29%|██▉       | 29/100 [02:59<07:16,  6.14s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 30%|███       | 30/100 [03:06<07:39,  6.57s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 31%|███       | 31/100 [03:11<06:50,  5.95s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 32%|███▏      | 32/100 [03:19<07:20,  6.47s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 33%|███▎      | 33/100 [03:24<06:49,  6.11s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 34%|███▍      | 34/100 [03:31<06:58,  6.33s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 35%|███▌      | 35/100 [03:36<06:38,  6.13s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 36%|███▌      | 36/100 [03:41<05:56,  5.58s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 37%|███▋      | 37/100 [03:50<07:09,  6.82s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 38%|███▊      | 38/100 [03:56<06:33,  6.35s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 39%|███▉      | 39/100 [04:03<06:53,  6.77s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 40%|████      | 40/100 [04:09<06:25,  6.42s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 41%|████      | 41/100 [04:13<05:28,  5.56s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 42%|████▏     | 42/100 [04:16<04:37,  4.79s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 43%|████▎     | 43/100 [04:24<05:38,  5.94s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 44%|████▍     | 44/100 [04:33<06:12,  6.65s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 45%|████▌     | 45/100 [04:38<05:41,  6.21s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 46%|████▌     | 46/100 [04:45<05:45,  6.40s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 47%|████▋     | 47/100 [04:59<07:44,  8.77s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 48%|████▊     | 48/100 [05:03<06:29,  7.50s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 49%|████▉     | 49/100 [05:18<08:04,  9.50s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 50%|█████     | 50/100 [05:27<07:58,  9.57s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 51%|█████     | 51/100 [05:35<07:23,  9.06s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 52%|█████▏    | 52/100 [05:41<06:30,  8.13s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 53%|█████▎    | 53/100 [05:46<05:32,  7.06s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 54%|█████▍    | 54/100 [05:49<04:37,  6.03s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 55%|█████▌    | 55/100 [05:54<04:12,  5.60s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 56%|█████▌    | 56/100 [06:02<04:36,  6.28s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 57%|█████▋    | 57/100 [06:06<03:58,  5.54s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 58%|█████▊    | 58/100 [06:12<04:09,  5.95s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 59%|█████▉    | 59/100 [06:19<04:15,  6.24s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 60%|██████    | 60/100 [06:29<04:52,  7.30s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 61%|██████    | 61/100 [06:33<04:01,  6.20s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 62%|██████▏   | 62/100 [06:38<03:48,  6.02s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 63%|██████▎   | 63/100 [06:44<03:39,  5.92s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 64%|██████▍   | 64/100 [06:49<03:18,  5.50s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 65%|██████▌   | 65/100 [06:56<03:33,  6.10s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 66%|██████▌   | 66/100 [07:04<03:41,  6.52s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 67%|██████▋   | 67/100 [07:11<03:45,  6.84s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 68%|██████▊   | 68/100 [07:20<03:57,  7.41s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 69%|██████▉   | 69/100 [07:25<03:29,  6.76s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 70%|███████   | 70/100 [07:29<03:00,  6.01s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 71%|███████   | 71/100 [07:34<02:44,  5.66s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 72%|███████▏  | 72/100 [07:38<02:26,  5.22s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 73%|███████▎  | 73/100 [07:43<02:16,  5.05s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 74%|███████▍  | 74/100 [07:48<02:13,  5.14s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 75%|███████▌  | 75/100 [07:54<02:11,  5.26s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 76%|███████▌  | 76/100 [08:01<02:17,  5.74s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 77%|███████▋  | 77/100 [08:06<02:09,  5.62s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 78%|███████▊  | 78/100 [08:16<02:31,  6.87s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 79%|███████▉  | 79/100 [08:25<02:35,  7.40s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 80%|████████  | 80/100 [08:33<02:36,  7.82s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 81%|████████  | 81/100 [08:37<02:06,  6.68s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 82%|████████▏ | 82/100 [08:43<01:52,  6.27s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 83%|████████▎ | 83/100 [08:51<01:54,  6.75s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 84%|████████▍ | 84/100 [08:56<01:41,  6.32s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 85%|████████▌ | 85/100 [09:07<01:57,  7.83s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 86%|████████▌ | 86/100 [09:13<01:40,  7.16s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 87%|████████▋ | 87/100 [09:18<01:25,  6.61s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 88%|████████▊ | 88/100 [09:25<01:20,  6.69s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 89%|████████▉ | 89/100 [09:29<01:04,  5.83s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 90%|█████████ | 90/100 [09:36<01:01,  6.15s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 91%|█████████ | 91/100 [09:39<00:46,  5.21s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 92%|█████████▏| 92/100 [09:48<00:50,  6.34s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 93%|█████████▎| 93/100 [09:53<00:42,  6.04s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 94%|█████████▍| 94/100 [09:59<00:35,  5.94s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 95%|█████████▌| 95/100 [10:05<00:29,  5.96s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 96%|█████████▌| 96/100 [10:14<00:27,  6.79s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 97%|█████████▋| 97/100 [10:18<00:18,  6.22s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 98%|█████████▊| 98/100 [10:22<00:10,  5.41s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      " 99%|█████████▉| 99/100 [10:27<00:05,  5.37s/it]The `multi_class` argument has been deprecated and renamed to `multi_label`. `multi_class` will be removed in a future version of Transformers.\n",
      "100%|██████████| 100/100 [10:34<00:00,  6.35s/it]\n"
     ]
    }
   ],
   "source": [
    "candidate_labels = list(category_map.values()) #candidate labels are basically the classes that the classifier will predict\n",
    "predictedCategories = []\n",
    "trueCategories = []\n",
    "for i in tqdm(range(100)):\n",
    "    text = df.iloc[i,]['abstract']\n",
    "    cat = df.iloc[i,]['categories']\n",
    "    cat = cat.split()\n",
    "    res = classifier(text, candidate_labels, multi_class=True)#setting multi-class as True\n",
    "    labels = res['labels'] \n",
    "    scores = res['scores'] #extracting the scores associated with the labels\n",
    "    res_dict = {label : score for label,score in zip(labels, scores)}\n",
    "    sorted_dict = dict(sorted(res_dict.items(), key=lambda x:x[1],reverse = True)) #sorting the dictionary of labels in descending order based on their score\n",
    "    categories  = []\n",
    "    for i, (k,v) in enumerate(sorted_dict.items()):\n",
    "        if(i > 2): #storing only the best 3 predictions\n",
    "            break\n",
    "        else:\n",
    "            categories.append(k)\n",
    "    predictedCategories.append(categories)\n",
    "    trueCats = [category_map[x] for x in cat]\n",
    "    trueCategories.append(trueCats)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c2b3f8fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-26T09:42:15.782583Z",
     "iopub.status.busy": "2024-06-26T09:42:15.781765Z",
     "iopub.status.idle": "2024-06-26T09:42:15.787375Z",
     "shell.execute_reply": "2024-06-26T09:42:15.786555Z"
    },
    "papermill": {
     "duration": 0.032897,
     "end_time": "2024-06-26T09:42:15.789350",
     "exception": false,
     "start_time": "2024-06-26T09:42:15.756453",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True Categories ['Strongly Correlated Electrons', 'Materials Science']\n",
      "Predicted Categories ['Complex Variables', 'High Energy Physics - Experiment', 'Applied Physics']\n",
      "##################################################\n",
      "True Categories ['Dynamical Systems', 'Complex Variables']\n",
      "Predicted Categories ['Dynamical Systems', 'Applications', 'Sound']\n",
      "##################################################\n",
      "True Categories ['Atomic Physics']\n",
      "Predicted Categories ['Quantum Gases', 'Quantum Physics', 'Applied Physics']\n",
      "##################################################\n"
     ]
    }
   ],
   "source": [
    "for y_true, y_pred in zip(trueCategories[:3], predictedCategories[:3]):\n",
    "    print(f'True Categories {y_true}')\n",
    "    print(f'Predicted Categories {y_pred}')\n",
    "    print('#'*50)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "078336f3",
   "metadata": {
    "papermill": {
     "duration": 0.024157,
     "end_time": "2024-06-26T09:42:15.837466",
     "exception": false,
     "start_time": "2024-06-26T09:42:15.813309",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Manual One-Hot Encoding</center>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "10d0a366",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:42:15.887625Z",
     "iopub.status.busy": "2024-06-26T09:42:15.886935Z",
     "iopub.status.idle": "2024-06-26T09:42:15.891573Z",
     "shell.execute_reply": "2024-06-26T09:42:15.890660Z"
    },
    "papermill": {
     "duration": 0.031932,
     "end_time": "2024-06-26T09:42:15.893548",
     "exception": false,
     "start_time": "2024-06-26T09:42:15.861616",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "category_idx = {cat : i for i,cat in enumerate(category_map.values())} "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bff7162c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-26T09:42:15.942794Z",
     "iopub.status.busy": "2024-06-26T09:42:15.942471Z",
     "iopub.status.idle": "2024-06-26T09:42:15.948556Z",
     "shell.execute_reply": "2024-06-26T09:42:15.947710Z"
    },
    "papermill": {
     "duration": 0.033022,
     "end_time": "2024-06-26T09:42:15.950369",
     "exception": false,
     "start_time": "2024-06-26T09:42:15.917347",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_trueEncoded = []\n",
    "y_predEncoded = []\n",
    "for y_true, y_pred in zip(trueCategories, predictedCategories):\n",
    "    encTrue = [0] * len(category_map)\n",
    "    for cat in y_true:\n",
    "        idx = category_idx[cat]\n",
    "        encTrue[idx] = 1\n",
    "    y_trueEncoded.append(encTrue)\n",
    "    encPred = [0] * len(category_map)\n",
    "    for cat in y_pred:\n",
    "        idx = category_idx[cat]\n",
    "        encPred[idx] = 1\n",
    "    y_predEncoded.append(encPred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38804644",
   "metadata": {
    "papermill": {
     "duration": 0.023782,
     "end_time": "2024-06-26T09:42:15.998824",
     "exception": false,
     "start_time": "2024-06-26T09:42:15.975042",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# <center>Evaluation</center>"
   ]
  },
  {
   "attachments": {
    "image.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "f79d0021",
   "metadata": {
    "papermill": {
     "duration": 0.023756,
     "end_time": "2024-06-26T09:42:16.046761",
     "exception": false,
     "start_time": "2024-06-26T09:42:16.023005",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "397230cd",
   "metadata": {
    "papermill": {
     "duration": 0.073359,
     "end_time": "2024-06-26T09:42:16.144858",
     "exception": false,
     "start_time": "2024-06-26T09:42:16.071499",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Hamming Loss\n",
    "\n",
    "### The Hamming loss is the fraction of labels that are incorrectly predicted."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "08b4bee2",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-06-26T09:42:16.196552Z",
     "iopub.status.busy": "2024-06-26T09:42:16.195581Z",
     "iopub.status.idle": "2024-06-26T09:42:16.211805Z",
     "shell.execute_reply": "2024-06-26T09:42:16.210791Z"
    },
    "papermill": {
     "duration": 0.043989,
     "end_time": "2024-06-26T09:42:16.213859",
     "exception": false,
     "start_time": "2024-06-26T09:42:16.169870",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The hamming loss is 0.0282\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import hamming_loss\n",
    "print(f'The hamming loss is {hamming_loss(y_trueEncoded,y_predEncoded):.4f}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d40ef94",
   "metadata": {
    "papermill": {
     "duration": 0.024359,
     "end_time": "2024-06-26T09:42:16.263133",
     "exception": false,
     "start_time": "2024-06-26T09:42:16.238774",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c91b8b9c",
   "metadata": {
    "papermill": {
     "duration": 0.023672,
     "end_time": "2024-06-26T09:42:16.311037",
     "exception": false,
     "start_time": "2024-06-26T09:42:16.287365",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9505ef44",
   "metadata": {
    "papermill": {
     "duration": 0.024985,
     "end_time": "2024-06-26T09:42:16.360091",
     "exception": false,
     "start_time": "2024-06-26T09:42:16.335106",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 612177,
     "sourceId": 8761721,
     "sourceType": "datasetVersion"
    }
   ],
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 807.596055,
   "end_time": "2024-06-26T09:42:19.144837",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-26T09:28:51.548782",
   "version": "2.5.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0116101ee90a48c883d3b37ede86315e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "04582dfe20c14f8cb501f152ae96a48f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "08acc4d3f76444258a55ee66416dbf86": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_dd851fb9682e488881ed8f37d76c675d",
       "placeholder": "​",
       "style": "IPY_MODEL_1045263836ab4ff19a88778e52c41068",
       "value": " 1.36M/1.36M [00:00&lt;00:00, 3.29MB/s]"
      }
     },
     "0923c55733e94b9fa87d99d146e7d569": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "09f261d620f046778f384d1477ab5b77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_b8546f74bbda4e90bcb0d89f4e708589",
       "placeholder": "​",
       "style": "IPY_MODEL_feccf93b584248f69f996c624f4fd1f8",
       "value": " 456k/456k [00:00&lt;00:00, 5.26MB/s]"
      }
     },
     "0d3ac6c586fe4bbd9bc68bf718eed7d4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0eae5bd5cab44ff090e4264768ff99d3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "0f14dd7af5314b16aa75b1de1523fa04": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "0f76cdc46e7b46a1a336e10b4049c859": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_50390f55b3bf43c9905af8c8e84ad6b3",
       "max": 1355863.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0f14dd7af5314b16aa75b1de1523fa04",
       "value": 1355863.0
      }
     },
     "10160ef6a00d44219ec07ca4a44d2cd4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "1045263836ab4ff19a88778e52c41068": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "14b7ec44905b43bebc58cff4de67b9b6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1c305c841a2d4a70a1ac8231e5acfb65": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "20e4add70adf4e8981f84326fade6009": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_fe340ba812aa41e0984d43b5f0e79471",
       "placeholder": "​",
       "style": "IPY_MODEL_d0b35caaa8fa4670bb2ada723777989b",
       "value": "config.json: 100%"
      }
     },
     "22cd718600f645e19c7cd8985dccf277": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_4eb9684da0e54834af8a870eb590fdd4",
       "placeholder": "​",
       "style": "IPY_MODEL_f46387f687644e27b1e2ada8e79ad513",
       "value": " 1.63G/1.63G [00:05&lt;00:00, 347MB/s]"
      }
     },
     "247902e5520346e98a0c64e65e638d6a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "29b35239148747d7bda2b7be71fdad22": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2bba4aaffd3544a9a3b167df97fe3ad7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "39155cb4801a4ac78d9d08400c83f361": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3b26a2ecc71e49cb96b45a625119c590": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_f43ed81fed9648d0bdf9b651e8187f04",
       "placeholder": "​",
       "style": "IPY_MODEL_0eae5bd5cab44ff090e4264768ff99d3",
       "value": "tokenizer.json: 100%"
      }
     },
     "3c4b3462971b4d2fa5222c36c7066116": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_0923c55733e94b9fa87d99d146e7d569",
       "max": 1154.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_14b7ec44905b43bebc58cff4de67b9b6",
       "value": 1154.0
      }
     },
     "3e91cb937c22438bb90b8096ce757fce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "4548b6a8f1584434a5b5f1dec916300f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_4ea5a457d0ab49e58342cc2bac0492e9",
        "IPY_MODEL_f6c415d5edcf4424b26e90fb6f37d239",
        "IPY_MODEL_fc029bfea9f34f81963366f19b68c286"
       ],
       "layout": "IPY_MODEL_520160f269f14cce877db2e72564c822"
      }
     },
     "496cbd0e878844a4ba8d5c97aa05689e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_c3097d4a23db4d69bf665429fc2adbc1",
       "max": 26.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_04582dfe20c14f8cb501f152ae96a48f",
       "value": 26.0
      }
     },
     "4afc91af1b2b4d2e904e3c1d3af4dffa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4b5090dc0aef4adeab6008a65661e051": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4ea5a457d0ab49e58342cc2bac0492e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_a3fdf29c3df34e0bbae3f1dbf70682c5",
       "placeholder": "​",
       "style": "IPY_MODEL_6759cfa263534dfeac94732c62e3762c",
       "value": "vocab.json: 100%"
      }
     },
     "4eb9684da0e54834af8a870eb590fdd4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "500028b7cd5d4fdfaa6bb7ddd5a2999c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_247902e5520346e98a0c64e65e638d6a",
       "placeholder": "​",
       "style": "IPY_MODEL_b9b20f8286a243e3bdf8ea25b2625fbe",
       "value": " 1.15k/1.15k [00:00&lt;00:00, 98.1kB/s]"
      }
     },
     "50390f55b3bf43c9905af8c8e84ad6b3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "51287776cfb74517ac3f537bf219606c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "520160f269f14cce877db2e72564c822": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "528c43719df94edd8346b1c77fad9f93": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5987b2cfb3de44a79e57c8c9ddb09867": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_29b35239148747d7bda2b7be71fdad22",
       "max": 1629437147.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a4e53aa9fdbe418db27dd4c4cc633cc7",
       "value": 1629437147.0
      }
     },
     "6759cfa263534dfeac94732c62e3762c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "6ac4424e648042fd96b911ae73847a2f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7ef6391f80b04bbe81661c811c93b091": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8b6f5181b8754399bc1a6bd6021e04d4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "905b4d451e214737b0cdf0645d979de4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d400c3e9b5504d30b064b6eb2fa66818",
        "IPY_MODEL_a86813ab525b4b9eb65cf13d123433b1",
        "IPY_MODEL_09f261d620f046778f384d1477ab5b77"
       ],
       "layout": "IPY_MODEL_6ac4424e648042fd96b911ae73847a2f"
      }
     },
     "941ecca51b3543a49238d836dbd5af5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_4afc91af1b2b4d2e904e3c1d3af4dffa",
       "placeholder": "​",
       "style": "IPY_MODEL_10160ef6a00d44219ec07ca4a44d2cd4",
       "value": " 26.0/26.0 [00:00&lt;00:00, 1.78kB/s]"
      }
     },
     "994be505e7e9407aa3a4f374df84a51b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3b26a2ecc71e49cb96b45a625119c590",
        "IPY_MODEL_0f76cdc46e7b46a1a336e10b4049c859",
        "IPY_MODEL_08acc4d3f76444258a55ee66416dbf86"
       ],
       "layout": "IPY_MODEL_4b5090dc0aef4adeab6008a65661e051"
      }
     },
     "9f0b95d961ea4c1e93ed3181fb0a9a61": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_cd1b9333f5734a5b83391dcab6535a07",
        "IPY_MODEL_496cbd0e878844a4ba8d5c97aa05689e",
        "IPY_MODEL_941ecca51b3543a49238d836dbd5af5f"
       ],
       "layout": "IPY_MODEL_528c43719df94edd8346b1c77fad9f93"
      }
     },
     "a3fdf29c3df34e0bbae3f1dbf70682c5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a4e53aa9fdbe418db27dd4c4cc633cc7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a86813ab525b4b9eb65cf13d123433b1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_39155cb4801a4ac78d9d08400c83f361",
       "max": 456318.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0116101ee90a48c883d3b37ede86315e",
       "value": 456318.0
      }
     },
     "b0d266740a5a4cefa558a8a72e7036d0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b8546f74bbda4e90bcb0d89f4e708589": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b9b20f8286a243e3bdf8ea25b2625fbe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "c3097d4a23db4d69bf665429fc2adbc1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cd1b9333f5734a5b83391dcab6535a07": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_ce7cd74ee39241b188ed090affbdc3bf",
       "placeholder": "​",
       "style": "IPY_MODEL_f5414c801147445cac9782713ff0ec45",
       "value": "tokenizer_config.json: 100%"
      }
     },
     "ce7cd74ee39241b188ed090affbdc3bf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d0b35caaa8fa4670bb2ada723777989b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "d400c3e9b5504d30b064b6eb2fa66818": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_fff5d3489db44a0cb920c126f95c9ff3",
       "placeholder": "​",
       "style": "IPY_MODEL_51287776cfb74517ac3f537bf219606c",
       "value": "merges.txt: 100%"
      }
     },
     "d56fd839320b4c9a81efb9c390bed98e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "dd851fb9682e488881ed8f37d76c675d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ed34546ddced435293023e9a799a9fc0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_b0d266740a5a4cefa558a8a72e7036d0",
       "placeholder": "​",
       "style": "IPY_MODEL_3e91cb937c22438bb90b8096ce757fce",
       "value": "model.safetensors: 100%"
      }
     },
     "f43ed81fed9648d0bdf9b651e8187f04": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f46387f687644e27b1e2ada8e79ad513": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "f50cfb6f8caa4f509450194e4f0be8f1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_ed34546ddced435293023e9a799a9fc0",
        "IPY_MODEL_5987b2cfb3de44a79e57c8c9ddb09867",
        "IPY_MODEL_22cd718600f645e19c7cd8985dccf277"
       ],
       "layout": "IPY_MODEL_2bba4aaffd3544a9a3b167df97fe3ad7"
      }
     },
     "f5414c801147445cac9782713ff0ec45": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "f6c415d5edcf4424b26e90fb6f37d239": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_1c305c841a2d4a70a1ac8231e5acfb65",
       "max": 898822.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_7ef6391f80b04bbe81661c811c93b091",
       "value": 898822.0
      }
     },
     "fa98c83ee4ca474186cd6eefdf0b3753": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_20e4add70adf4e8981f84326fade6009",
        "IPY_MODEL_3c4b3462971b4d2fa5222c36c7066116",
        "IPY_MODEL_500028b7cd5d4fdfaa6bb7ddd5a2999c"
       ],
       "layout": "IPY_MODEL_8b6f5181b8754399bc1a6bd6021e04d4"
      }
     },
     "fc029bfea9f34f81963366f19b68c286": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_0d3ac6c586fe4bbd9bc68bf718eed7d4",
       "placeholder": "​",
       "style": "IPY_MODEL_d56fd839320b4c9a81efb9c390bed98e",
       "value": " 899k/899k [00:00&lt;00:00, 3.63MB/s]"
      }
     },
     "fe340ba812aa41e0984d43b5f0e79471": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "feccf93b584248f69f996c624f4fd1f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "fff5d3489db44a0cb920c126f95c9ff3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
